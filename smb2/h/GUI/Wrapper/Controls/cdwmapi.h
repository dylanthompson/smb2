
#include <dwmapi.h>

#define DWM(Type) typedef HRESULT (WINAPI* Type)
#define DWMCALL(Type, Func)		if ( !m_hDwm )										\
									return E_NOTIMPL;								\
								else												\
									return ((Type) GetProcAddress((HMODULE) m_hDwm, Func))

DWM(DWMDEFWINDOWPROC) (HWND, UINT, WPARAM, LPARAM, LRESULT*);
DWM(DWMENABLEBLURBEHINDWINDOW) (HWND, const DWM_BLURBEHIND *);
DWM(DWMENABLECOMPOSITION)(UINT);
DWM(DWMEXTENDFRAMEINTOCLIENTAREA) (HWND, const MARGINS *);
DWM(DWMGETCOLORIZATIONCOLOR) (DWORD*, BOOL*);
DWM(DWMGETCOMPOSITIONTIMINGINFO) (HWND, DWM_TIMING_INFO*);
DWM(DWMGETWINDOWATTRIBUTE) (HWND, DWORD, PVOID, DWORD);
DWM(DWMISCOMPOSITIONENABLED) (BOOL*);
DWM(DWMMODIFYPREVIOUSDXFRAMEDURATION) (HWND, INT, BOOL);
DWM(DWMQUERYTHUMBNAILSOURCESIZE) (HTHUMBNAIL, PSIZE);
DWM(DWMREGISTERTHUMBNAIL) (HWND, HWND*, PHTHUMBNAIL);
DWM(DWMSETDXFRAMEDURATION) (HWND, INT);
DWM(DWMSETPRESENTPARAMETERS) (HWND, DWM_PRESENT_PARAMETERS*);
DWM(DWMSETWINDOWATTRIBUTE) (HWND, DWORD, LPCVOID, DWORD);
DWM(DWMUNREGISTERTHUMBNAIL) (HTHUMBNAIL);
DWM(DWMUPDATETHUMBNAILPROPERTIES) (HTHUMBNAIL, const DWM_THUMBNAIL_PROPERTIES*);

class CDwmApi
{
	HANDLE			m_hDwm;

public:
	CDwmApi();

	HRESULT CDwmApi::DwmDefWindowProc(HWND, UINT, WPARAM, LPARAM, LRESULT*);
	HRESULT CDwmApi::DwmEnableBlurBehindWindow(HWND, const DWM_BLURBEHIND *);
	HRESULT CDwmApi::DwmEnableComposition(UINT);
	HRESULT CDwmApi::DwmExtendFrameIntoClientArea(HWND, const MARGINS *);
	HRESULT CDwmApi::DwmGetColorizationColor(DWORD*, BOOL*);
	HRESULT CDwmApi::DwmGetCompositionTimingInfo(HWND, DWM_TIMING_INFO*);
	HRESULT CDwmApi::DwmGetWindowAttribute(HWND, DWORD, PVOID, DWORD);
	HRESULT CDwmApi::DwmIsCompositionEnabled(BOOL*);
	HRESULT CDwmApi::DwmModifyPreviousDxFrameDuration(HWND, INT, BOOL);
	HRESULT CDwmApi::DwmQueryThumbNailSourceSize(HTHUMBNAIL, PSIZE);
	HRESULT CDwmApi::DwmRegisterThumbNail(HWND, HWND*, PHTHUMBNAIL);
	HRESULT CDwmApi::DwmSetDxFrameDuration(HWND, INT);
	HRESULT CDwmApi::DwmSetPresentParameters(HWND, DWM_PRESENT_PARAMETERS*);
	HRESULT CDwmApi::DwmSetWindowAttribute(HWND, DWORD, LPCVOID, DWORD);
	HRESULT CDwmApi::DwmUnregisterThumbnail(HTHUMBNAIL);
	HRESULT CDwmApi::DwmUpdateThumbnailProperties(HTHUMBNAIL, const DWM_THUMBNAIL_PROPERTIES*);
};